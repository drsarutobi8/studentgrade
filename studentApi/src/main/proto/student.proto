// If we did not define the syntax, it would take the syntax as proto2 by default
syntax = "proto3";

// This is where the autogenerated java classes are gonna be stored
package com.students_information.stubs.student;

// With this line, I am saying that create multiple classes rather than a single class
option java_multiple_files = true;

message StudentInfoRequest{
  string school_id = 1;
  string student_id = 2;
}

message StudentInfoResponse{
  string school_id = 1;
  string student_id = 2;
  string name = 3;
  int32 age = 4;
  Gender gender = 5;
  Grade maths = 6;
  Grade art = 7;
  Grade chemistry = 8;
}

// message StudentInfoListAllRequest {
// }
// message StudentInfoListResponse {
//   repeated StudentInfoResponse studentsInfo=1;
// }

message StudentCreateRequest{
  string school_id = 1;
  string student_id = 2;
  string name = 3;
  int32 age = 4;
  Gender gender = 5;
}
message StudentCreateResponse{
  string school_id = 1;
  string student_id = 2;
}

message StudentReadRequest{
  string school_id = 1;
  string student_id = 2;
}
message StudentReadResponse{
  string school_id = 1;
  string student_id = 2;
  string name = 3;
  int32 age = 4;
  Gender gender = 5;
}

message StudentListAllRequest {
}
message StudentListResponse {
  repeated StudentReadResponse students=1;
}

message StudentUpdateRequest{
  string school_id = 1;
  string student_id = 2;
  string name = 3;
  int32 age = 4;
  Gender gender = 5;
}
message StudentUpdateResponse{
  string school_id = 1;
  string student_id = 2;
}

message StudentDeleteRequest{
  string school_id = 1;
  string student_id = 2;
}
message StudentDeleteResponse{
  int64 deletedCount = 1;
}

// Students grades are given either as PASS or FAIL.
enum Grade{
  PASS = 0;
  FAIL = 1;
  UNKNOWN=2;
}

// Students genders are given either as MALE or FEMALE.
enum Gender{
  MALE = 0;
  FEMALE = 1;
}

// Now let's define our service
service StudentService{
  rpc getInfo(StudentInfoRequest) returns (StudentInfoResponse);
  //rpc listAllInfo(StudentInfoListAllRequest) returns (StudentInfoListResponse);

  rpc create(StudentCreateRequest) returns (StudentCreateResponse);
  rpc read(StudentReadRequest) returns (StudentReadResponse);
  rpc update(StudentUpdateRequest) returns (StudentUpdateResponse);
  rpc delete(StudentDeleteRequest) returns (StudentDeleteResponse);
  rpc listAll(StudentListAllRequest) returns (StudentListResponse);
}
